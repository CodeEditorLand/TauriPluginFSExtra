var d$1=Object.defineProperty;var e=(c,a)=>{for(var b in a)d$1(c,b,{get:a[b],enumerable:!0});};

var u={};e(u,{convertFileSrc:()=>d,invoke:()=>_,transformCallback:()=>s});function l(){return window.crypto.getRandomValues(new Uint32Array(1))[0]}function s(e,r=!1){let n=l(),t=`_${n}`;return Object.defineProperty(window,t,{value:o=>(r&&Reflect.deleteProperty(window,t),e?.(o)),writable:!1,configurable:!0}),n}async function _(e,r={}){return new Promise((n,t)=>{let o=s(i=>{n(i),Reflect.deleteProperty(window,`_${c}`);},!0),c=s(i=>{t(i),Reflect.deleteProperty(window,`_${o}`);},!0);window.__TAURI_IPC__({cmd:e,callback:o,error:c,...r});})}function d(e,r="asset"){return window.__TAURI__.convertFileSrc(e,r)}

// Copyright 2019-2021 Tauri Programme within The Commons Conservancy
// SPDX-License-Identifier: Apache-2.0
// SPDX-License-Identifier: MIT
async function metadata(path) {
    return await _("plugin:fs-extra|metadata", {
        path,
    }).then((metadata) => {
        const { accessedAtMs, createdAtMs, modifiedAtMs, ...data } = metadata;
        return {
            accessedAt: new Date(accessedAtMs),
            createdAt: new Date(createdAtMs),
            modifiedAt: new Date(modifiedAtMs),
            ...data,
        };
    });
}
async function exists(path) {
    return await _("plugin:fs-extra|exists", { path });
}

export { exists, metadata };
//# sourceMappingURL=index.min.js.map
